#!/bin/bash

#SBATCH --job-name=mlip_tests
#SBATCH --partition=gputest
#SBATCH --account=plantto # !!it is mandatory to specify the account (project) as precised in the CSC rules!!
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=40
#SBATCH --mem-per-cpu=8GB
#SBATCH --time=0-00:15:00
#SBATCH --gres=gpu:v100:1
#SBATCH --output=mlp-r4-output_%j.txt
#SBATCH --error=mlp-r4-errors_%j.txt

#--------------------------------------------------------------------------------------------------------------------------------

# Record start time
start_time=$(date +"%Y-%m-%d %H:%M:%S")
echo "Job started at $start_time"

#================================< Instructions-Section for Training MACE Potential >============================================
#--------------------------------------------------------------------------------------------------------------------------------

# Load necessary modules (!!checkh the availability of the following modules when using another machine!!)
# If certian modules are not available on your machine, contact the corrsponding admin(s) to install them.
module load pytorch/2.2 #necessary for 'mace_run_train'

# using a virtual environment (!!when using v-env all the packages and dependencies should be installed in that mace-venv!!) 
# python3 -m venv --system-site-packages mace-venv # should be used if there is no existent v-env
source /scratch/plantto/<user_name>/packages/mace_env/bin/activate

# Using the 'ulimit' command to control the user-level resource limits for processes. the option '-s unlimited' specifies that 
# there should be no limit on the stack size for the processes launched by the job. The stack size is the amount of memory 
# allocated for the call stack of a program.
ulimit -s unlimited

# On-line data loading for large datasets

cd /scratch/plantto/<user_name>/mace_calcs/hyperparams_tests/cutoff_redius_tests/

mkdir processed_data-r4

python /scratch/plantto/<user_name>/packages/mace/scripts/preprocess_data.py \
    --train_file="./mlip_data_xe-water/mlip_data_xe-water_train.xyz" \
    --valid_file="./mlip_data_xe-water/mlip_data_xe-water_valid.xyz" \
    --valid_fraction=1 \
    --test_file="./mlip_data_xe-water/mlip_data_xe-water_test.xyz" \
    --r_max=4.0 \
    --h5_prefix="processed_data-r4/" \
    --compute_statistics \
    --E0s="average" \
    --seed=123 \
    --energy_key='energy' \
    --forces_key='forces' \
    --stress_key='stress' \

# Start of training the MACE architecture :

python /scratch/plantto/<user_name>/packages/mace/scripts/run_train.py \
    --train_file="./processed_data-r4/train/train_0.h5" \
    --valid_file="./processed_data-r4/val/val_0.h5" \
    --test_file="./processed_data-r4/test/default_0.h5" \
    --test_dir="./processed_data-r4" \
    --statistics_file="./processed_data-r4/statistics.json" \
    --name='MACE_model' \
    --model='ScaleShiftMACE' \
    --num_interactions=1 \
    --num_channels=128 \
    --error_table='PerAtomRMSEstressvirials' \
    --max_L=1 \
    --correlation=3 \
    --E0s='average' \
    --r_max=4.0 \
    --radial_type='bessel' \
    --num_radial_basis=8 \
    --num_cutoff_basis=8 \
    --loss='weighted' \
    --batch_size=1 \
    --valid_batch_size=1 \
    --max_num_epochs=100 \
    --ema \
    --ema_decay=0.99 \
    --default_dtype='float64' \
    --device='cuda' \
    --seed=123456 \
    --restart_latest \
    --model_dir='model-r4' \
    --checkpoints_dir='checkpoints-r4' \
    --results_dir='results-r4' \
    --log_dir='log-r4' \
    --lr=0.00001 \
    --lr_factor=0.5 \
    --forces_weight=1000 \
    --stress_weight=10 \
    --compute_stress=True \
    --compute_forces=True \
    --compute_avg_num_neighbors=True \
    --energy_key='energy' \
    --forces_key='forces' \
    --stress_key='stress' \
    --wandb\
    --wandb_project='MACE_MLP' \
    --wandb_entity='ouail-team' \
    --wandb_name='run_r4' \
    --amsgrad \
    --MLP_irreps='8x0e' \
    --radial_MLP='[32, 64, 128]' \
    --hidden_irreps='128x0e + 128x1o' \
    --num_channels=128 \
    --valid_fraction=1 \
#    --swa \
#    --start_swa=60 \

cp checkpoints-r4/*.model model-r4

# Evaluate the obtained MACE model on an XYZ file

# Find the model file that matches the pattern
model_file=$(ls ./model-r4/*.model | head -n 1)

# Check if any model files were found
if [ -z "$model_file" ]; then
  echo "No model files found in the directory ./model-r4/"
  exit 1
fi

python /scratch/plantto/<user_name>/packages/mace/scripts/eval_configs.py \
    --configs="./mlip_data_xe-water/mlip_data_xe-water_test.xyz" \
    --model="$model_file" \
    --output="./test-r4/mlip_data_xe-water_test_output.xyz" \

# Record end time
end_time=$(date +"%Y-%m-%d %H:%M:%S")
echo "Job finished at $end_time"

# Calculate and print execution time
start_seconds=$(date -d "$start_time" +"%s")
end_seconds=$(date -d "$end_time" +"%s")
execution_time=$((end_seconds - start_seconds))
echo "Job took $execution_time seconds to complete."

exit 0
